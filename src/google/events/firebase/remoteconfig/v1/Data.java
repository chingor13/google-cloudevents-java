// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/firebase/remoteconfig/v1/data.proto

package google.events.firebase.remoteconfig.v1;

public final class Data {
  private Data() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * What type of update was associated with the Remote Config template version.
   * </pre>
   *
   * Protobuf enum {@code google.events.firebase.remoteconfig.v1.RemoteConfigUpdateOrigin}
   */
  public enum RemoteConfigUpdateOrigin
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Catch-all for unrecognized values.
     * </pre>
     *
     * <code>REMOTE_CONFIG_UPDATE_ORIGIN_UNSPECIFIED = 0;</code>
     */
    REMOTE_CONFIG_UPDATE_ORIGIN_UNSPECIFIED(0),
    /**
     * <pre>
     * The update came from the Firebase UI.
     * </pre>
     *
     * <code>CONSOLE = 1;</code>
     */
    CONSOLE(1),
    /**
     * <pre>
     * The update came from the Remote Config REST API.
     * </pre>
     *
     * <code>REST_API = 2;</code>
     */
    REST_API(2),
    /**
     * <pre>
     * The update came from the Firebase Admin Node SDK.
     * </pre>
     *
     * <code>ADMIN_SDK_NODE = 3;</code>
     */
    ADMIN_SDK_NODE(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Catch-all for unrecognized values.
     * </pre>
     *
     * <code>REMOTE_CONFIG_UPDATE_ORIGIN_UNSPECIFIED = 0;</code>
     */
    public static final int REMOTE_CONFIG_UPDATE_ORIGIN_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * The update came from the Firebase UI.
     * </pre>
     *
     * <code>CONSOLE = 1;</code>
     */
    public static final int CONSOLE_VALUE = 1;
    /**
     * <pre>
     * The update came from the Remote Config REST API.
     * </pre>
     *
     * <code>REST_API = 2;</code>
     */
    public static final int REST_API_VALUE = 2;
    /**
     * <pre>
     * The update came from the Firebase Admin Node SDK.
     * </pre>
     *
     * <code>ADMIN_SDK_NODE = 3;</code>
     */
    public static final int ADMIN_SDK_NODE_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RemoteConfigUpdateOrigin valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RemoteConfigUpdateOrigin forNumber(int value) {
      switch (value) {
        case 0: return REMOTE_CONFIG_UPDATE_ORIGIN_UNSPECIFIED;
        case 1: return CONSOLE;
        case 2: return REST_API;
        case 3: return ADMIN_SDK_NODE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RemoteConfigUpdateOrigin>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RemoteConfigUpdateOrigin> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RemoteConfigUpdateOrigin>() {
            public RemoteConfigUpdateOrigin findValueByNumber(int number) {
              return RemoteConfigUpdateOrigin.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return google.events.firebase.remoteconfig.v1.Data.getDescriptor().getEnumTypes().get(0);
    }

    private static final RemoteConfigUpdateOrigin[] VALUES = values();

    public static RemoteConfigUpdateOrigin valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RemoteConfigUpdateOrigin(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.events.firebase.remoteconfig.v1.RemoteConfigUpdateOrigin)
  }

  /**
   * <pre>
   * Where the Remote Config update action originated.
   * </pre>
   *
   * Protobuf enum {@code google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType}
   */
  public enum RemoteConfigUpdateType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Catch-all for unrecognized enum values.
     * </pre>
     *
     * <code>REMOTE_CONFIG_UPDATE_TYPE_UNSPECIFIED = 0;</code>
     */
    REMOTE_CONFIG_UPDATE_TYPE_UNSPECIFIED(0),
    /**
     * <pre>
     * A regular incremental update.
     * </pre>
     *
     * <code>INCREMENTAL_UPDATE = 1;</code>
     */
    INCREMENTAL_UPDATE(1),
    /**
     * <pre>
     * A forced update.
     * The ETag was specified as "*" in an UpdateRemoteConfigRequest
     * request or the "Force Update" button was pressed on the console.
     * </pre>
     *
     * <code>FORCED_UPDATE = 2;</code>
     */
    FORCED_UPDATE(2),
    /**
     * <pre>
     * A rollback to a previous Remote Config template.
     * </pre>
     *
     * <code>ROLLBACK = 3;</code>
     */
    ROLLBACK(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Catch-all for unrecognized enum values.
     * </pre>
     *
     * <code>REMOTE_CONFIG_UPDATE_TYPE_UNSPECIFIED = 0;</code>
     */
    public static final int REMOTE_CONFIG_UPDATE_TYPE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * A regular incremental update.
     * </pre>
     *
     * <code>INCREMENTAL_UPDATE = 1;</code>
     */
    public static final int INCREMENTAL_UPDATE_VALUE = 1;
    /**
     * <pre>
     * A forced update.
     * The ETag was specified as "*" in an UpdateRemoteConfigRequest
     * request or the "Force Update" button was pressed on the console.
     * </pre>
     *
     * <code>FORCED_UPDATE = 2;</code>
     */
    public static final int FORCED_UPDATE_VALUE = 2;
    /**
     * <pre>
     * A rollback to a previous Remote Config template.
     * </pre>
     *
     * <code>ROLLBACK = 3;</code>
     */
    public static final int ROLLBACK_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RemoteConfigUpdateType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RemoteConfigUpdateType forNumber(int value) {
      switch (value) {
        case 0: return REMOTE_CONFIG_UPDATE_TYPE_UNSPECIFIED;
        case 1: return INCREMENTAL_UPDATE;
        case 2: return FORCED_UPDATE;
        case 3: return ROLLBACK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RemoteConfigUpdateType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RemoteConfigUpdateType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RemoteConfigUpdateType>() {
            public RemoteConfigUpdateType findValueByNumber(int number) {
              return RemoteConfigUpdateType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return google.events.firebase.remoteconfig.v1.Data.getDescriptor().getEnumTypes().get(1);
    }

    private static final RemoteConfigUpdateType[] VALUES = values();

    public static RemoteConfigUpdateType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RemoteConfigUpdateType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType)
  }

  public interface RemoteConfigEventDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.events.firebase.remoteconfig.v1.RemoteConfigEventData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The version number of the version's corresponding Remote Config template.
     * </pre>
     *
     * <code>int64 version_number = 1;</code>
     * @return The versionNumber.
     */
    long getVersionNumber();

    /**
     * <pre>
     * When the Remote Config template was written to the Remote Config server.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp update_time = 2;</code>
     * @return Whether the updateTime field is set.
     */
    boolean hasUpdateTime();
    /**
     * <pre>
     * When the Remote Config template was written to the Remote Config server.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp update_time = 2;</code>
     * @return The updateTime.
     */
    com.google.protobuf.Timestamp getUpdateTime();
    /**
     * <pre>
     * When the Remote Config template was written to the Remote Config server.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp update_time = 2;</code>
     */
    com.google.protobuf.TimestampOrBuilder getUpdateTimeOrBuilder();

    /**
     * <pre>
     *  Aggregation of all metadata fields about the account that performed the update.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUser update_user = 3;</code>
     * @return Whether the updateUser field is set.
     */
    boolean hasUpdateUser();
    /**
     * <pre>
     *  Aggregation of all metadata fields about the account that performed the update.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUser update_user = 3;</code>
     * @return The updateUser.
     */
    google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser getUpdateUser();
    /**
     * <pre>
     *  Aggregation of all metadata fields about the account that performed the update.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUser update_user = 3;</code>
     */
    google.events.firebase.remoteconfig.v1.Data.RemoteConfigUserOrBuilder getUpdateUserOrBuilder();

    /**
     * <pre>
     * The user-provided description of the corresponding Remote Config template.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * The user-provided description of the corresponding Remote Config template.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * Where the update action originated.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateOrigin update_origin = 5;</code>
     * @return The enum numeric value on the wire for updateOrigin.
     */
    int getUpdateOriginValue();
    /**
     * <pre>
     * Where the update action originated.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateOrigin update_origin = 5;</code>
     * @return The updateOrigin.
     */
    google.events.firebase.remoteconfig.v1.Data.RemoteConfigUpdateOrigin getUpdateOrigin();

    /**
     * <pre>
     * What type of update was made.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType update_type = 6;</code>
     * @return The enum numeric value on the wire for updateType.
     */
    int getUpdateTypeValue();
    /**
     * <pre>
     * What type of update was made.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType update_type = 6;</code>
     * @return The updateType.
     */
    google.events.firebase.remoteconfig.v1.Data.RemoteConfigUpdateType getUpdateType();

    /**
     * <pre>
     * Only present if this version is the result of a rollback, and will be the
     * version number of the Remote Config template that was rolled-back to.
     * </pre>
     *
     * <code>int64 rollback_source = 7;</code>
     * @return The rollbackSource.
     */
    long getRollbackSource();
  }
  /**
   * <pre>
   * The data within all Firebase Remote Config events.
   * </pre>
   *
   * Protobuf type {@code google.events.firebase.remoteconfig.v1.RemoteConfigEventData}
   */
  public static final class RemoteConfigEventData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.events.firebase.remoteconfig.v1.RemoteConfigEventData)
      RemoteConfigEventDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RemoteConfigEventData.newBuilder() to construct.
    private RemoteConfigEventData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RemoteConfigEventData() {
      description_ = "";
      updateOrigin_ = 0;
      updateType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RemoteConfigEventData();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RemoteConfigEventData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              versionNumber_ = input.readInt64();
              break;
            }
            case 18: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (updateTime_ != null) {
                subBuilder = updateTime_.toBuilder();
              }
              updateTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(updateTime_);
                updateTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser.Builder subBuilder = null;
              if (updateUser_ != null) {
                subBuilder = updateUser_.toBuilder();
              }
              updateUser_ = input.readMessage(google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(updateUser_);
                updateUser_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 40: {
              int rawValue = input.readEnum();

              updateOrigin_ = rawValue;
              break;
            }
            case 48: {
              int rawValue = input.readEnum();

              updateType_ = rawValue;
              break;
            }
            case 56: {

              rollbackSource_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return google.events.firebase.remoteconfig.v1.Data.internal_static_google_events_firebase_remoteconfig_v1_RemoteConfigEventData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return google.events.firebase.remoteconfig.v1.Data.internal_static_google_events_firebase_remoteconfig_v1_RemoteConfigEventData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData.class, google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData.Builder.class);
    }

    public static final int VERSION_NUMBER_FIELD_NUMBER = 1;
    private long versionNumber_;
    /**
     * <pre>
     * The version number of the version's corresponding Remote Config template.
     * </pre>
     *
     * <code>int64 version_number = 1;</code>
     * @return The versionNumber.
     */
    @java.lang.Override
    public long getVersionNumber() {
      return versionNumber_;
    }

    public static final int UPDATE_TIME_FIELD_NUMBER = 2;
    private com.google.protobuf.Timestamp updateTime_;
    /**
     * <pre>
     * When the Remote Config template was written to the Remote Config server.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp update_time = 2;</code>
     * @return Whether the updateTime field is set.
     */
    @java.lang.Override
    public boolean hasUpdateTime() {
      return updateTime_ != null;
    }
    /**
     * <pre>
     * When the Remote Config template was written to the Remote Config server.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp update_time = 2;</code>
     * @return The updateTime.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getUpdateTime() {
      return updateTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : updateTime_;
    }
    /**
     * <pre>
     * When the Remote Config template was written to the Remote Config server.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp update_time = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getUpdateTimeOrBuilder() {
      return getUpdateTime();
    }

    public static final int UPDATE_USER_FIELD_NUMBER = 3;
    private google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser updateUser_;
    /**
     * <pre>
     *  Aggregation of all metadata fields about the account that performed the update.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUser update_user = 3;</code>
     * @return Whether the updateUser field is set.
     */
    @java.lang.Override
    public boolean hasUpdateUser() {
      return updateUser_ != null;
    }
    /**
     * <pre>
     *  Aggregation of all metadata fields about the account that performed the update.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUser update_user = 3;</code>
     * @return The updateUser.
     */
    @java.lang.Override
    public google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser getUpdateUser() {
      return updateUser_ == null ? google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser.getDefaultInstance() : updateUser_;
    }
    /**
     * <pre>
     *  Aggregation of all metadata fields about the account that performed the update.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUser update_user = 3;</code>
     */
    @java.lang.Override
    public google.events.firebase.remoteconfig.v1.Data.RemoteConfigUserOrBuilder getUpdateUserOrBuilder() {
      return getUpdateUser();
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * The user-provided description of the corresponding Remote Config template.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The user-provided description of the corresponding Remote Config template.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UPDATE_ORIGIN_FIELD_NUMBER = 5;
    private int updateOrigin_;
    /**
     * <pre>
     * Where the update action originated.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateOrigin update_origin = 5;</code>
     * @return The enum numeric value on the wire for updateOrigin.
     */
    @java.lang.Override public int getUpdateOriginValue() {
      return updateOrigin_;
    }
    /**
     * <pre>
     * Where the update action originated.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateOrigin update_origin = 5;</code>
     * @return The updateOrigin.
     */
    @java.lang.Override public google.events.firebase.remoteconfig.v1.Data.RemoteConfigUpdateOrigin getUpdateOrigin() {
      @SuppressWarnings("deprecation")
      google.events.firebase.remoteconfig.v1.Data.RemoteConfigUpdateOrigin result = google.events.firebase.remoteconfig.v1.Data.RemoteConfigUpdateOrigin.valueOf(updateOrigin_);
      return result == null ? google.events.firebase.remoteconfig.v1.Data.RemoteConfigUpdateOrigin.UNRECOGNIZED : result;
    }

    public static final int UPDATE_TYPE_FIELD_NUMBER = 6;
    private int updateType_;
    /**
     * <pre>
     * What type of update was made.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType update_type = 6;</code>
     * @return The enum numeric value on the wire for updateType.
     */
    @java.lang.Override public int getUpdateTypeValue() {
      return updateType_;
    }
    /**
     * <pre>
     * What type of update was made.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType update_type = 6;</code>
     * @return The updateType.
     */
    @java.lang.Override public google.events.firebase.remoteconfig.v1.Data.RemoteConfigUpdateType getUpdateType() {
      @SuppressWarnings("deprecation")
      google.events.firebase.remoteconfig.v1.Data.RemoteConfigUpdateType result = google.events.firebase.remoteconfig.v1.Data.RemoteConfigUpdateType.valueOf(updateType_);
      return result == null ? google.events.firebase.remoteconfig.v1.Data.RemoteConfigUpdateType.UNRECOGNIZED : result;
    }

    public static final int ROLLBACK_SOURCE_FIELD_NUMBER = 7;
    private long rollbackSource_;
    /**
     * <pre>
     * Only present if this version is the result of a rollback, and will be the
     * version number of the Remote Config template that was rolled-back to.
     * </pre>
     *
     * <code>int64 rollback_source = 7;</code>
     * @return The rollbackSource.
     */
    @java.lang.Override
    public long getRollbackSource() {
      return rollbackSource_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (versionNumber_ != 0L) {
        output.writeInt64(1, versionNumber_);
      }
      if (updateTime_ != null) {
        output.writeMessage(2, getUpdateTime());
      }
      if (updateUser_ != null) {
        output.writeMessage(3, getUpdateUser());
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
      }
      if (updateOrigin_ != google.events.firebase.remoteconfig.v1.Data.RemoteConfigUpdateOrigin.REMOTE_CONFIG_UPDATE_ORIGIN_UNSPECIFIED.getNumber()) {
        output.writeEnum(5, updateOrigin_);
      }
      if (updateType_ != google.events.firebase.remoteconfig.v1.Data.RemoteConfigUpdateType.REMOTE_CONFIG_UPDATE_TYPE_UNSPECIFIED.getNumber()) {
        output.writeEnum(6, updateType_);
      }
      if (rollbackSource_ != 0L) {
        output.writeInt64(7, rollbackSource_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (versionNumber_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, versionNumber_);
      }
      if (updateTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getUpdateTime());
      }
      if (updateUser_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getUpdateUser());
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
      }
      if (updateOrigin_ != google.events.firebase.remoteconfig.v1.Data.RemoteConfigUpdateOrigin.REMOTE_CONFIG_UPDATE_ORIGIN_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, updateOrigin_);
      }
      if (updateType_ != google.events.firebase.remoteconfig.v1.Data.RemoteConfigUpdateType.REMOTE_CONFIG_UPDATE_TYPE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, updateType_);
      }
      if (rollbackSource_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, rollbackSource_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData)) {
        return super.equals(obj);
      }
      google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData other = (google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData) obj;

      if (getVersionNumber()
          != other.getVersionNumber()) return false;
      if (hasUpdateTime() != other.hasUpdateTime()) return false;
      if (hasUpdateTime()) {
        if (!getUpdateTime()
            .equals(other.getUpdateTime())) return false;
      }
      if (hasUpdateUser() != other.hasUpdateUser()) return false;
      if (hasUpdateUser()) {
        if (!getUpdateUser()
            .equals(other.getUpdateUser())) return false;
      }
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (updateOrigin_ != other.updateOrigin_) return false;
      if (updateType_ != other.updateType_) return false;
      if (getRollbackSource()
          != other.getRollbackSource()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VERSION_NUMBER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getVersionNumber());
      if (hasUpdateTime()) {
        hash = (37 * hash) + UPDATE_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getUpdateTime().hashCode();
      }
      if (hasUpdateUser()) {
        hash = (37 * hash) + UPDATE_USER_FIELD_NUMBER;
        hash = (53 * hash) + getUpdateUser().hashCode();
      }
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + UPDATE_ORIGIN_FIELD_NUMBER;
      hash = (53 * hash) + updateOrigin_;
      hash = (37 * hash) + UPDATE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + updateType_;
      hash = (37 * hash) + ROLLBACK_SOURCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRollbackSource());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The data within all Firebase Remote Config events.
     * </pre>
     *
     * Protobuf type {@code google.events.firebase.remoteconfig.v1.RemoteConfigEventData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.events.firebase.remoteconfig.v1.RemoteConfigEventData)
        google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return google.events.firebase.remoteconfig.v1.Data.internal_static_google_events_firebase_remoteconfig_v1_RemoteConfigEventData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return google.events.firebase.remoteconfig.v1.Data.internal_static_google_events_firebase_remoteconfig_v1_RemoteConfigEventData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData.class, google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData.Builder.class);
      }

      // Construct using google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        versionNumber_ = 0L;

        if (updateTimeBuilder_ == null) {
          updateTime_ = null;
        } else {
          updateTime_ = null;
          updateTimeBuilder_ = null;
        }
        if (updateUserBuilder_ == null) {
          updateUser_ = null;
        } else {
          updateUser_ = null;
          updateUserBuilder_ = null;
        }
        description_ = "";

        updateOrigin_ = 0;

        updateType_ = 0;

        rollbackSource_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return google.events.firebase.remoteconfig.v1.Data.internal_static_google_events_firebase_remoteconfig_v1_RemoteConfigEventData_descriptor;
      }

      @java.lang.Override
      public google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData getDefaultInstanceForType() {
        return google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData.getDefaultInstance();
      }

      @java.lang.Override
      public google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData build() {
        google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData buildPartial() {
        google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData result = new google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData(this);
        result.versionNumber_ = versionNumber_;
        if (updateTimeBuilder_ == null) {
          result.updateTime_ = updateTime_;
        } else {
          result.updateTime_ = updateTimeBuilder_.build();
        }
        if (updateUserBuilder_ == null) {
          result.updateUser_ = updateUser_;
        } else {
          result.updateUser_ = updateUserBuilder_.build();
        }
        result.description_ = description_;
        result.updateOrigin_ = updateOrigin_;
        result.updateType_ = updateType_;
        result.rollbackSource_ = rollbackSource_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData) {
          return mergeFrom((google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData other) {
        if (other == google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData.getDefaultInstance()) return this;
        if (other.getVersionNumber() != 0L) {
          setVersionNumber(other.getVersionNumber());
        }
        if (other.hasUpdateTime()) {
          mergeUpdateTime(other.getUpdateTime());
        }
        if (other.hasUpdateUser()) {
          mergeUpdateUser(other.getUpdateUser());
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (other.updateOrigin_ != 0) {
          setUpdateOriginValue(other.getUpdateOriginValue());
        }
        if (other.updateType_ != 0) {
          setUpdateTypeValue(other.getUpdateTypeValue());
        }
        if (other.getRollbackSource() != 0L) {
          setRollbackSource(other.getRollbackSource());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long versionNumber_ ;
      /**
       * <pre>
       * The version number of the version's corresponding Remote Config template.
       * </pre>
       *
       * <code>int64 version_number = 1;</code>
       * @return The versionNumber.
       */
      @java.lang.Override
      public long getVersionNumber() {
        return versionNumber_;
      }
      /**
       * <pre>
       * The version number of the version's corresponding Remote Config template.
       * </pre>
       *
       * <code>int64 version_number = 1;</code>
       * @param value The versionNumber to set.
       * @return This builder for chaining.
       */
      public Builder setVersionNumber(long value) {
        
        versionNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The version number of the version's corresponding Remote Config template.
       * </pre>
       *
       * <code>int64 version_number = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersionNumber() {
        
        versionNumber_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.Timestamp updateTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> updateTimeBuilder_;
      /**
       * <pre>
       * When the Remote Config template was written to the Remote Config server.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp update_time = 2;</code>
       * @return Whether the updateTime field is set.
       */
      public boolean hasUpdateTime() {
        return updateTimeBuilder_ != null || updateTime_ != null;
      }
      /**
       * <pre>
       * When the Remote Config template was written to the Remote Config server.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp update_time = 2;</code>
       * @return The updateTime.
       */
      public com.google.protobuf.Timestamp getUpdateTime() {
        if (updateTimeBuilder_ == null) {
          return updateTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : updateTime_;
        } else {
          return updateTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * When the Remote Config template was written to the Remote Config server.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp update_time = 2;</code>
       */
      public Builder setUpdateTime(com.google.protobuf.Timestamp value) {
        if (updateTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updateTime_ = value;
          onChanged();
        } else {
          updateTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * When the Remote Config template was written to the Remote Config server.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp update_time = 2;</code>
       */
      public Builder setUpdateTime(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (updateTimeBuilder_ == null) {
          updateTime_ = builderForValue.build();
          onChanged();
        } else {
          updateTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * When the Remote Config template was written to the Remote Config server.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp update_time = 2;</code>
       */
      public Builder mergeUpdateTime(com.google.protobuf.Timestamp value) {
        if (updateTimeBuilder_ == null) {
          if (updateTime_ != null) {
            updateTime_ =
              com.google.protobuf.Timestamp.newBuilder(updateTime_).mergeFrom(value).buildPartial();
          } else {
            updateTime_ = value;
          }
          onChanged();
        } else {
          updateTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * When the Remote Config template was written to the Remote Config server.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp update_time = 2;</code>
       */
      public Builder clearUpdateTime() {
        if (updateTimeBuilder_ == null) {
          updateTime_ = null;
          onChanged();
        } else {
          updateTime_ = null;
          updateTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * When the Remote Config template was written to the Remote Config server.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp update_time = 2;</code>
       */
      public com.google.protobuf.Timestamp.Builder getUpdateTimeBuilder() {
        
        onChanged();
        return getUpdateTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * When the Remote Config template was written to the Remote Config server.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp update_time = 2;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getUpdateTimeOrBuilder() {
        if (updateTimeBuilder_ != null) {
          return updateTimeBuilder_.getMessageOrBuilder();
        } else {
          return updateTime_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : updateTime_;
        }
      }
      /**
       * <pre>
       * When the Remote Config template was written to the Remote Config server.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp update_time = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getUpdateTimeFieldBuilder() {
        if (updateTimeBuilder_ == null) {
          updateTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getUpdateTime(),
                  getParentForChildren(),
                  isClean());
          updateTime_ = null;
        }
        return updateTimeBuilder_;
      }

      private google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser updateUser_;
      private com.google.protobuf.SingleFieldBuilderV3<
          google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser, google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser.Builder, google.events.firebase.remoteconfig.v1.Data.RemoteConfigUserOrBuilder> updateUserBuilder_;
      /**
       * <pre>
       *  Aggregation of all metadata fields about the account that performed the update.
       * </pre>
       *
       * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUser update_user = 3;</code>
       * @return Whether the updateUser field is set.
       */
      public boolean hasUpdateUser() {
        return updateUserBuilder_ != null || updateUser_ != null;
      }
      /**
       * <pre>
       *  Aggregation of all metadata fields about the account that performed the update.
       * </pre>
       *
       * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUser update_user = 3;</code>
       * @return The updateUser.
       */
      public google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser getUpdateUser() {
        if (updateUserBuilder_ == null) {
          return updateUser_ == null ? google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser.getDefaultInstance() : updateUser_;
        } else {
          return updateUserBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *  Aggregation of all metadata fields about the account that performed the update.
       * </pre>
       *
       * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUser update_user = 3;</code>
       */
      public Builder setUpdateUser(google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser value) {
        if (updateUserBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updateUser_ = value;
          onChanged();
        } else {
          updateUserBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *  Aggregation of all metadata fields about the account that performed the update.
       * </pre>
       *
       * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUser update_user = 3;</code>
       */
      public Builder setUpdateUser(
          google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser.Builder builderForValue) {
        if (updateUserBuilder_ == null) {
          updateUser_ = builderForValue.build();
          onChanged();
        } else {
          updateUserBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *  Aggregation of all metadata fields about the account that performed the update.
       * </pre>
       *
       * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUser update_user = 3;</code>
       */
      public Builder mergeUpdateUser(google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser value) {
        if (updateUserBuilder_ == null) {
          if (updateUser_ != null) {
            updateUser_ =
              google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser.newBuilder(updateUser_).mergeFrom(value).buildPartial();
          } else {
            updateUser_ = value;
          }
          onChanged();
        } else {
          updateUserBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *  Aggregation of all metadata fields about the account that performed the update.
       * </pre>
       *
       * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUser update_user = 3;</code>
       */
      public Builder clearUpdateUser() {
        if (updateUserBuilder_ == null) {
          updateUser_ = null;
          onChanged();
        } else {
          updateUser_ = null;
          updateUserBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *  Aggregation of all metadata fields about the account that performed the update.
       * </pre>
       *
       * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUser update_user = 3;</code>
       */
      public google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser.Builder getUpdateUserBuilder() {
        
        onChanged();
        return getUpdateUserFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *  Aggregation of all metadata fields about the account that performed the update.
       * </pre>
       *
       * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUser update_user = 3;</code>
       */
      public google.events.firebase.remoteconfig.v1.Data.RemoteConfigUserOrBuilder getUpdateUserOrBuilder() {
        if (updateUserBuilder_ != null) {
          return updateUserBuilder_.getMessageOrBuilder();
        } else {
          return updateUser_ == null ?
              google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser.getDefaultInstance() : updateUser_;
        }
      }
      /**
       * <pre>
       *  Aggregation of all metadata fields about the account that performed the update.
       * </pre>
       *
       * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUser update_user = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser, google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser.Builder, google.events.firebase.remoteconfig.v1.Data.RemoteConfigUserOrBuilder> 
          getUpdateUserFieldBuilder() {
        if (updateUserBuilder_ == null) {
          updateUserBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser, google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser.Builder, google.events.firebase.remoteconfig.v1.Data.RemoteConfigUserOrBuilder>(
                  getUpdateUser(),
                  getParentForChildren(),
                  isClean());
          updateUser_ = null;
        }
        return updateUserBuilder_;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * The user-provided description of the corresponding Remote Config template.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The user-provided description of the corresponding Remote Config template.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The user-provided description of the corresponding Remote Config template.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The user-provided description of the corresponding Remote Config template.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The user-provided description of the corresponding Remote Config template.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private int updateOrigin_ = 0;
      /**
       * <pre>
       * Where the update action originated.
       * </pre>
       *
       * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateOrigin update_origin = 5;</code>
       * @return The enum numeric value on the wire for updateOrigin.
       */
      @java.lang.Override public int getUpdateOriginValue() {
        return updateOrigin_;
      }
      /**
       * <pre>
       * Where the update action originated.
       * </pre>
       *
       * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateOrigin update_origin = 5;</code>
       * @param value The enum numeric value on the wire for updateOrigin to set.
       * @return This builder for chaining.
       */
      public Builder setUpdateOriginValue(int value) {
        
        updateOrigin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Where the update action originated.
       * </pre>
       *
       * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateOrigin update_origin = 5;</code>
       * @return The updateOrigin.
       */
      @java.lang.Override
      public google.events.firebase.remoteconfig.v1.Data.RemoteConfigUpdateOrigin getUpdateOrigin() {
        @SuppressWarnings("deprecation")
        google.events.firebase.remoteconfig.v1.Data.RemoteConfigUpdateOrigin result = google.events.firebase.remoteconfig.v1.Data.RemoteConfigUpdateOrigin.valueOf(updateOrigin_);
        return result == null ? google.events.firebase.remoteconfig.v1.Data.RemoteConfigUpdateOrigin.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Where the update action originated.
       * </pre>
       *
       * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateOrigin update_origin = 5;</code>
       * @param value The updateOrigin to set.
       * @return This builder for chaining.
       */
      public Builder setUpdateOrigin(google.events.firebase.remoteconfig.v1.Data.RemoteConfigUpdateOrigin value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        updateOrigin_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Where the update action originated.
       * </pre>
       *
       * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateOrigin update_origin = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearUpdateOrigin() {
        
        updateOrigin_ = 0;
        onChanged();
        return this;
      }

      private int updateType_ = 0;
      /**
       * <pre>
       * What type of update was made.
       * </pre>
       *
       * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType update_type = 6;</code>
       * @return The enum numeric value on the wire for updateType.
       */
      @java.lang.Override public int getUpdateTypeValue() {
        return updateType_;
      }
      /**
       * <pre>
       * What type of update was made.
       * </pre>
       *
       * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType update_type = 6;</code>
       * @param value The enum numeric value on the wire for updateType to set.
       * @return This builder for chaining.
       */
      public Builder setUpdateTypeValue(int value) {
        
        updateType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * What type of update was made.
       * </pre>
       *
       * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType update_type = 6;</code>
       * @return The updateType.
       */
      @java.lang.Override
      public google.events.firebase.remoteconfig.v1.Data.RemoteConfigUpdateType getUpdateType() {
        @SuppressWarnings("deprecation")
        google.events.firebase.remoteconfig.v1.Data.RemoteConfigUpdateType result = google.events.firebase.remoteconfig.v1.Data.RemoteConfigUpdateType.valueOf(updateType_);
        return result == null ? google.events.firebase.remoteconfig.v1.Data.RemoteConfigUpdateType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * What type of update was made.
       * </pre>
       *
       * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType update_type = 6;</code>
       * @param value The updateType to set.
       * @return This builder for chaining.
       */
      public Builder setUpdateType(google.events.firebase.remoteconfig.v1.Data.RemoteConfigUpdateType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        updateType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * What type of update was made.
       * </pre>
       *
       * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType update_type = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearUpdateType() {
        
        updateType_ = 0;
        onChanged();
        return this;
      }

      private long rollbackSource_ ;
      /**
       * <pre>
       * Only present if this version is the result of a rollback, and will be the
       * version number of the Remote Config template that was rolled-back to.
       * </pre>
       *
       * <code>int64 rollback_source = 7;</code>
       * @return The rollbackSource.
       */
      @java.lang.Override
      public long getRollbackSource() {
        return rollbackSource_;
      }
      /**
       * <pre>
       * Only present if this version is the result of a rollback, and will be the
       * version number of the Remote Config template that was rolled-back to.
       * </pre>
       *
       * <code>int64 rollback_source = 7;</code>
       * @param value The rollbackSource to set.
       * @return This builder for chaining.
       */
      public Builder setRollbackSource(long value) {
        
        rollbackSource_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Only present if this version is the result of a rollback, and will be the
       * version number of the Remote Config template that was rolled-back to.
       * </pre>
       *
       * <code>int64 rollback_source = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearRollbackSource() {
        
        rollbackSource_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.events.firebase.remoteconfig.v1.RemoteConfigEventData)
    }

    // @@protoc_insertion_point(class_scope:google.events.firebase.remoteconfig.v1.RemoteConfigEventData)
    private static final google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData();
    }

    public static google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RemoteConfigEventData>
        PARSER = new com.google.protobuf.AbstractParser<RemoteConfigEventData>() {
      @java.lang.Override
      public RemoteConfigEventData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RemoteConfigEventData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RemoteConfigEventData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RemoteConfigEventData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public google.events.firebase.remoteconfig.v1.Data.RemoteConfigEventData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RemoteConfigUserOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.events.firebase.remoteconfig.v1.RemoteConfigUser)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Display name.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * Display name.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Email address.
     * </pre>
     *
     * <code>string email = 2;</code>
     * @return The email.
     */
    java.lang.String getEmail();
    /**
     * <pre>
     * Email address.
     * </pre>
     *
     * <code>string email = 2;</code>
     * @return The bytes for email.
     */
    com.google.protobuf.ByteString
        getEmailBytes();

    /**
     * <pre>
     * Image URL.
     * </pre>
     *
     * <code>string image_url = 3;</code>
     * @return The imageUrl.
     */
    java.lang.String getImageUrl();
    /**
     * <pre>
     * Image URL.
     * </pre>
     *
     * <code>string image_url = 3;</code>
     * @return The bytes for imageUrl.
     */
    com.google.protobuf.ByteString
        getImageUrlBytes();
  }
  /**
   * <pre>
   * All the fields associated with the person/service account
   * that wrote a Remote Config template.
   * </pre>
   *
   * Protobuf type {@code google.events.firebase.remoteconfig.v1.RemoteConfigUser}
   */
  public static final class RemoteConfigUser extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.events.firebase.remoteconfig.v1.RemoteConfigUser)
      RemoteConfigUserOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RemoteConfigUser.newBuilder() to construct.
    private RemoteConfigUser(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RemoteConfigUser() {
      name_ = "";
      email_ = "";
      imageUrl_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RemoteConfigUser();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RemoteConfigUser(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              email_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              imageUrl_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return google.events.firebase.remoteconfig.v1.Data.internal_static_google_events_firebase_remoteconfig_v1_RemoteConfigUser_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return google.events.firebase.remoteconfig.v1.Data.internal_static_google_events_firebase_remoteconfig_v1_RemoteConfigUser_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser.class, google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Display name.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Display name.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EMAIL_FIELD_NUMBER = 2;
    private volatile java.lang.Object email_;
    /**
     * <pre>
     * Email address.
     * </pre>
     *
     * <code>string email = 2;</code>
     * @return The email.
     */
    @java.lang.Override
    public java.lang.String getEmail() {
      java.lang.Object ref = email_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        email_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Email address.
     * </pre>
     *
     * <code>string email = 2;</code>
     * @return The bytes for email.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getEmailBytes() {
      java.lang.Object ref = email_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        email_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IMAGE_URL_FIELD_NUMBER = 3;
    private volatile java.lang.Object imageUrl_;
    /**
     * <pre>
     * Image URL.
     * </pre>
     *
     * <code>string image_url = 3;</code>
     * @return The imageUrl.
     */
    @java.lang.Override
    public java.lang.String getImageUrl() {
      java.lang.Object ref = imageUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        imageUrl_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Image URL.
     * </pre>
     *
     * <code>string image_url = 3;</code>
     * @return The bytes for imageUrl.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getImageUrlBytes() {
      java.lang.Object ref = imageUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        imageUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (!getEmailBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, email_);
      }
      if (!getImageUrlBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, imageUrl_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (!getEmailBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, email_);
      }
      if (!getImageUrlBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, imageUrl_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser)) {
        return super.equals(obj);
      }
      google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser other = (google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (!getEmail()
          .equals(other.getEmail())) return false;
      if (!getImageUrl()
          .equals(other.getImageUrl())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + EMAIL_FIELD_NUMBER;
      hash = (53 * hash) + getEmail().hashCode();
      hash = (37 * hash) + IMAGE_URL_FIELD_NUMBER;
      hash = (53 * hash) + getImageUrl().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * All the fields associated with the person/service account
     * that wrote a Remote Config template.
     * </pre>
     *
     * Protobuf type {@code google.events.firebase.remoteconfig.v1.RemoteConfigUser}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.events.firebase.remoteconfig.v1.RemoteConfigUser)
        google.events.firebase.remoteconfig.v1.Data.RemoteConfigUserOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return google.events.firebase.remoteconfig.v1.Data.internal_static_google_events_firebase_remoteconfig_v1_RemoteConfigUser_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return google.events.firebase.remoteconfig.v1.Data.internal_static_google_events_firebase_remoteconfig_v1_RemoteConfigUser_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser.class, google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser.Builder.class);
      }

      // Construct using google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        email_ = "";

        imageUrl_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return google.events.firebase.remoteconfig.v1.Data.internal_static_google_events_firebase_remoteconfig_v1_RemoteConfigUser_descriptor;
      }

      @java.lang.Override
      public google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser getDefaultInstanceForType() {
        return google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser.getDefaultInstance();
      }

      @java.lang.Override
      public google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser build() {
        google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser buildPartial() {
        google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser result = new google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser(this);
        result.name_ = name_;
        result.email_ = email_;
        result.imageUrl_ = imageUrl_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser) {
          return mergeFrom((google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser other) {
        if (other == google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getEmail().isEmpty()) {
          email_ = other.email_;
          onChanged();
        }
        if (!other.getImageUrl().isEmpty()) {
          imageUrl_ = other.imageUrl_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Display name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Display name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Display name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Display name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Display name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object email_ = "";
      /**
       * <pre>
       * Email address.
       * </pre>
       *
       * <code>string email = 2;</code>
       * @return The email.
       */
      public java.lang.String getEmail() {
        java.lang.Object ref = email_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          email_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Email address.
       * </pre>
       *
       * <code>string email = 2;</code>
       * @return The bytes for email.
       */
      public com.google.protobuf.ByteString
          getEmailBytes() {
        java.lang.Object ref = email_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          email_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Email address.
       * </pre>
       *
       * <code>string email = 2;</code>
       * @param value The email to set.
       * @return This builder for chaining.
       */
      public Builder setEmail(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        email_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Email address.
       * </pre>
       *
       * <code>string email = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearEmail() {
        
        email_ = getDefaultInstance().getEmail();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Email address.
       * </pre>
       *
       * <code>string email = 2;</code>
       * @param value The bytes for email to set.
       * @return This builder for chaining.
       */
      public Builder setEmailBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        email_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object imageUrl_ = "";
      /**
       * <pre>
       * Image URL.
       * </pre>
       *
       * <code>string image_url = 3;</code>
       * @return The imageUrl.
       */
      public java.lang.String getImageUrl() {
        java.lang.Object ref = imageUrl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          imageUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Image URL.
       * </pre>
       *
       * <code>string image_url = 3;</code>
       * @return The bytes for imageUrl.
       */
      public com.google.protobuf.ByteString
          getImageUrlBytes() {
        java.lang.Object ref = imageUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          imageUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Image URL.
       * </pre>
       *
       * <code>string image_url = 3;</code>
       * @param value The imageUrl to set.
       * @return This builder for chaining.
       */
      public Builder setImageUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        imageUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Image URL.
       * </pre>
       *
       * <code>string image_url = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearImageUrl() {
        
        imageUrl_ = getDefaultInstance().getImageUrl();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Image URL.
       * </pre>
       *
       * <code>string image_url = 3;</code>
       * @param value The bytes for imageUrl to set.
       * @return This builder for chaining.
       */
      public Builder setImageUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        imageUrl_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.events.firebase.remoteconfig.v1.RemoteConfigUser)
    }

    // @@protoc_insertion_point(class_scope:google.events.firebase.remoteconfig.v1.RemoteConfigUser)
    private static final google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser();
    }

    public static google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RemoteConfigUser>
        PARSER = new com.google.protobuf.AbstractParser<RemoteConfigUser>() {
      @java.lang.Override
      public RemoteConfigUser parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RemoteConfigUser(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RemoteConfigUser> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RemoteConfigUser> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public google.events.firebase.remoteconfig.v1.Data.RemoteConfigUser getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_events_firebase_remoteconfig_v1_RemoteConfigEventData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_events_firebase_remoteconfig_v1_RemoteConfigEventData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_events_firebase_remoteconfig_v1_RemoteConfigUser_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_events_firebase_remoteconfig_v1_RemoteConfigUser_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n1google/events/firebase/remoteconfig/v1" +
      "/data.proto\022&google.events.firebase.remo" +
      "teconfig.v1\032\037google/protobuf/timestamp.p" +
      "roto\"\213\003\n\025RemoteConfigEventData\022\026\n\016versio" +
      "n_number\030\001 \001(\003\022/\n\013update_time\030\002 \001(\0132\032.go" +
      "ogle.protobuf.Timestamp\022M\n\013update_user\030\003" +
      " \001(\01328.google.events.firebase.remoteconf" +
      "ig.v1.RemoteConfigUser\022\023\n\013description\030\004 " +
      "\001(\t\022W\n\rupdate_origin\030\005 \001(\0162@.google.even" +
      "ts.firebase.remoteconfig.v1.RemoteConfig" +
      "UpdateOrigin\022S\n\013update_type\030\006 \001(\0162>.goog" +
      "le.events.firebase.remoteconfig.v1.Remot" +
      "eConfigUpdateType\022\027\n\017rollback_source\030\007 \001" +
      "(\003\"B\n\020RemoteConfigUser\022\014\n\004name\030\001 \001(\t\022\r\n\005" +
      "email\030\002 \001(\t\022\021\n\timage_url\030\003 \001(\t*v\n\030Remote" +
      "ConfigUpdateOrigin\022+\n\'REMOTE_CONFIG_UPDA" +
      "TE_ORIGIN_UNSPECIFIED\020\000\022\013\n\007CONSOLE\020\001\022\014\n\010" +
      "REST_API\020\002\022\022\n\016ADMIN_SDK_NODE\020\003*|\n\026Remote" +
      "ConfigUpdateType\022)\n%REMOTE_CONFIG_UPDATE" +
      "_TYPE_UNSPECIFIED\020\000\022\026\n\022INCREMENTAL_UPDAT" +
      "E\020\001\022\021\n\rFORCED_UPDATE\020\002\022\014\n\010ROLLBACK\020\003B2\252\002" +
      "/Google.Events.Protobuf.Firebase.RemoteC" +
      "onfig.V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.TimestampProto.getDescriptor(),
        });
    internal_static_google_events_firebase_remoteconfig_v1_RemoteConfigEventData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_google_events_firebase_remoteconfig_v1_RemoteConfigEventData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_events_firebase_remoteconfig_v1_RemoteConfigEventData_descriptor,
        new java.lang.String[] { "VersionNumber", "UpdateTime", "UpdateUser", "Description", "UpdateOrigin", "UpdateType", "RollbackSource", });
    internal_static_google_events_firebase_remoteconfig_v1_RemoteConfigUser_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_google_events_firebase_remoteconfig_v1_RemoteConfigUser_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_events_firebase_remoteconfig_v1_RemoteConfigUser_descriptor,
        new java.lang.String[] { "Name", "Email", "ImageUrl", });
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
